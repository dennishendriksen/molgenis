  PARSER_BEGIN(SortParser)
package org.molgenis.api.data.v3;

import java.io.StringReader;
import java.util.List;
import java.util.ArrayList;
import org.molgenis.api.data.v3.Sort.Order;
import org.molgenis.api.data.v3.Sort.Direction;

class SortParser {
  SortParser(String str) {
    this(new StringReader(str));
  }
}

  PARSER_END(SortParser)

TOKEN: {
		<DIRECTION: ("+"|"-"|"")>
	| <#LETTER: ["a"-"z","A"-"Z"]>
  |	<#DIGIT: ["0"-"9"]>
  |	<UNDERSCORE: "_">
  |	<HASH: "#">
  |	<COMMA: ",">
  | <IDENTIFIER: (<LETTER> | <DIGIT> | <UNDERSCORE> | <HASH>)+>
}

private Sort sort() : {
  String direction = null;
  String identifier = null;
  List<org.molgenis.api.data.v3.Sort.Order> orders = new ArrayList<>();
}
{
  (
    direction = direction()
  )?
  identifier = identifier()
  {
    if(direction == null || direction.equals("+")){
      orders.add(new Order(identifier,Direction.ASC));
    }else{
      orders.add(new Order(identifier,Direction.DESC));
    }
  }
  (
  <COMMA>
    (
      direction = direction()
    )?
    identifier = identifier()
    {
      if(direction == null || direction.equals("+")){
        orders.add(new Order(identifier,Direction.ASC));
      }else{
        orders.add(new Order(identifier,Direction.DESC));
      }
    }
  )*
  {
  return new Sort(orders);
  }
}

private String identifier() : {
} {
  <IDENTIFIER>
  { return token.image; }
}

private String direction() : {
} {
  <DIRECTION>
  { return token.image; }
}

Sort parse() : {
	Sort sort;
}{
	(
	  sort = sort()
	)
	<EOF>
	{
	  return sort;
  }
}